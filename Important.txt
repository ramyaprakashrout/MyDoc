requestor : darshan
approver  : darshanapp
deployer  : darshandep
va2010			//ip 192.168.168.248

PocketHCM: Rout@123	Snipping Tool

Please find the below login credentials for SVN.

User Name -ramyaprakash.rout
Password - rraomu

Create a folder in working directory, Checkout and give path.

P:\Users\LIS Product Documents\VitalPath Introduction\Vitalpath Induction
Software: http://softwares.vitalaxis.com/Software/

Entity Framework: http://www.c-sharpcorner.com/article/entity-framework-introduction-using-c-sharp-part-one/
using (Entities context = new Entities())  
{  
  IEnumerable<EmployeeDetails> empDetails = context.Database.SqlQuery<EmployeeDetails>("exec GetEmployeeData ", parameters).ToList();
}
==================================================================================================================================
To run Visual Studio 2010 Shell
open .sln file in notepad and modify # Visual Studio 2010 to
# Visual Studio 2010 Express For Windows Phone
==================================================================================================================================
var query = (from accounts in db.Accounts
                         join useraccnt in db.UserAccountRoles
                         on accounts.accountid equals useraccnt.accountid
                         select accounts.accountname).Distinct();

SelectList LocationList = new SelectList(query);
ViewBag.LocationList = LocationList;

@Html.DropDownList("LocationList", (IEnumerable<SelectListItem>)ViewBag.LocationList, "Select", 
new { @id = "tfacility", @class = "form-control", onchange = "getvacasedata(); getlogisticdata();", 
value = "@((ViewBag.CallData.locationname==null)?string.Empty:ViewBag.CallData.locationname)" } )
==================================================================================================================================
sort drop down list based on value/text in ajax success
$.each(data.d, function (key, val) {
                if ($('#hdnVersionID').val() == key) {
                    $("#cmbVersions").append(new Option(val, key, true));
                    $("#cmbVersions").val(key);
                } else {
                    $("#cmbVersions").append(new Option(val, key, false));
                }
            });

$("#cmbVersions").html($('#cmbVersions option').sort(function (x, y) {
                    return $(x).text() < $(y).text() ? -1 : 1;
                }))
                $("#cmbVersions").get(0).selectedIndex = 0;

==================================================================================================================================

Attended KT session in morning and got a basic idea on L2L integration
and how it's working between ordering facility and Lab-A and Lab-B.
Modified Save Deployment Tracking Details stored procedure by adding new columns.
Worked on Deployment Tracker Details, fixed some UI issues, compare and merge files.
Unit tested all pages with requester, approver and deployer credentials.

vitaldb5.vitalaxis.com
Login:darshan5  Pass:Star@123

==================================================================================================================================
//date picker is taking MM/dd/yyyy
$( function() {
      $( "#tcalldate" ).datepicker({
          format: 'dd-mm-yyyy',
	  "autoclose": true
      });
      $("#tcalldate").datepicker("setDate", new Date());
  } );

==================================================================================================================================
//datatable - jquery.min.js, datatables.js
$(function () {

        $('#employeeTbl').dataTable({

            "paging": true,
            "ordering": true,
            //"order": [[1, "desc"]],
            "info": true,
            "columns": [
                { "orderDataType": "dom-text-numeric" },
                { "orderDataType": "dom-text-numeric" },
                { "orderDataType": "dom-text-numeric" },
                { "orderDataType": "dom-text-numeric" },
                { "orderDataType": "dom-text-numeric" },
            ]
        });
    });

==================================================================================================================================
// auto save
        window.setInterval(function () {
            var dirtyElements = $('#appraisalFormId')
                           .find('input, select, textarea')
                           .add('[form=myformid]')
                           .not(':disabled')
                           .each(function () {
                               $(this).attr('data-dirty', false).change(function () {
                                   $(this).attr('data-dirty', true);
                               });
                           });
            if (dirtyElements.length > 0) {
                var data = dirtyElements.serialize();
                $.post('CollectAppraisalForm', data, function () {
                    dirtyElements.attr('data-dirty', false);
                    alert('data saved successfully');
                });
            }
        }, 600000); // 10 mins

==================================================================================================================================
// auto logout

<system.web>  //web.config
    <sessionState mode="InProc" timeout="20"></sessionState>
    <compilation debug="true" targetFramework="4.5.1" />
    <httpRuntime targetFramework="4.5.1" />
  </system.web>

<script type="text/javascript">  //layout
        $(document).ready(function () {
            var sessionTimeout = @Session.Timeout;
            var time = sessionTimeout*1000*60;
            var timeout;
            var isLogout = false;
            var newUrl = '@Url.Action("LogIn", "Login")';
            timeout = setTimeout(function() {
                isLogout = true;
                window.location.href = newUrl;
            }, time);

            $(document).on('click', function () {
                if (!isLogout) {
                    clearTimeout(timeout);
                    timeout = setTimeout(function() {
                        isLogout = true;
                        window.location.href = newUrl;
                    }, time);
                }
            });
        });
    </script>

==================================================================================================================================
//session
Session["UserCredentials"] = new UserCedentials()
                    {
                        EmployeeId = LoginDetails.employeeid,
                        Username = login.UserId,
                        UserId = LoginDetails.userid,
                        Displayname = LoginDetails.displayname,
                        TeamId = Convert.ToInt32(LoginDetails.teamid),
                        ManagerId = manager.ManagerId,
                        ManagerName = manager.ManagerName,
                        Designation = LoginDetails.designation
                    };

==================================================================================================================================
// data table customised message
$('#example').dataTable( { "oLanguage": { "sEmptyTable": "My Custom Message On Empty Table" } } );
==================================================================================================================================
// check if a substring is present in a list of strings
var v = (from x in PatientLastNameList
                         where x.IndexOf(lastname, StringComparison.CurrentCultureIgnoreCase) != -1
                         select x).ToList();
==================================================================================================================================
//to know the table is present in which database
EXEC sp_MSforeachdb "use [?];select '[?]' as DatabaseName, * from sys.tables where name='Cases' "
==================================================================================================================================
convert dd/MM/yyyy to MM/dd/yyyy
string[] sDate = strDateTime.Split('/');
string sDateTime = sDate[1] + '/' + sDate[0] + '/' + sDate[2];
string dtFinaldate = Convert.ToDateTime(sDateTime);
==================================================================================================================================
Redirect To Route
return RedirectToRoute(new 
{ 
    controller = "UsersAdditionalPreviousNames", 
    action = "Index", 
    userId = user.Id, 
    applicantId = applicant.Id 
});
==================================================================================================================================
Represents a dynamic data collection that provides notifications when items get added, removed 
or when the whole list is refreshed.
private ObservableCollection<OrganismDetails> _organismDetails;
==================================================================================================================================
DropDownList Entity Framework
sm.StudentNames = (from p in db.StudentInfoes.AsEnumerable()
                        select new SelectListItem
                        {
                            Text = p.FirstName,
                            Value = p.StudentId.ToString()
                        }).ToList();
View: @Html.DropDownListFor(m => m.StudentNames, Model.StudentNames, "--Select First Name--", 
		new { @class = "form-control", @id = "ddlStudents" })
==================================================================================================================================
Append Drop down list in Ajax
var appenddata = "";
$.each(data, function (i, item) {
            appenddata += "<option value ='" + item.StudentId + "'>" + item.FirstName + "</option>";
       });
$('#ddlStudents1').append(appenddata);

Append Empty list to Drop down list in Ajax
@Html.DropDownListFor(m => m.StudentNames2, Enumerable.Empty<SelectListItem>(), "--Select Last Name--", 
new { @class = "form-control", @id = "ddlStudents1" })
==================================================================================================================================
Keyword not supported: metadata
string constr = ConfigurationManager.ConnectionStrings["SprocEntities"].ConnectionString;
if (constr.ToLower().StartsWith("metadata="))
{
    EntityConnectionStringBuilder efBuilder = new EntityConnectionStringBuilder(constr);
    constr = efBuilder.ProviderConnectionString;
}
using (SqlConnection con = new SqlConnection(constr)){}
==================================================================================================================================